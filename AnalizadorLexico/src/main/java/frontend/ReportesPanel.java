package frontend;

import backend.Token;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author michael
 */
public class ReportesPanel extends javax.swing.JPanel {

    private ArrayList<Token> listaToken;

    /**
     * Creates new form ReportesPanel
     */
    public ReportesPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaReportes = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        tablaReportes = new javax.swing.JTable(){
            public boolean isCellEditable(int row, int col) {
                return false;
            }
        };
        tablaReportes.setFont(new java.awt.Font("MesloLGL Nerd Font", 0, 13)); // NOI18N
        tablaReportes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Token", "Patrón", "Lexema", "Línea", "Columna", "Ver gráfico"
            }
        ));
        jScrollPane1.setViewportView(tablaReportes);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaReportes;
    // End of variables declaration//GEN-END:variables

    public void agregarDatosTabla(ArrayList<Token> tokens) {
        this.listaToken = tokens;

        String[] columnas = {"Token", "Patrón", "Lexema", "Línea", "Columna", "Ver gráfico"};
        DefaultTableModel modelo = new DefaultTableModel(columnas, tokens.size());
        tablaReportes.setModel(modelo);

        TableModel modeloDatos = tablaReportes.getModel();
        for (int i = 0; i < tokens.size(); i++) {
            Token token = tokens.get(i);
            modeloDatos.setValueAt(token.getToken(), i, 0);
            modeloDatos.setValueAt(token.getPatron(), i, 1);
            modeloDatos.setValueAt(token.getLexema(), i, 2);
            modeloDatos.setValueAt(token.getLinea(), i, 3);
            modeloDatos.setValueAt(token.getColumna(), i, 4);
            modeloDatos.setValueAt("Click aquí para generar gráfico", i, 5);
        }
    }
}
