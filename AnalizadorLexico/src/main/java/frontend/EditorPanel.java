package frontend;

import backend.Analizador;
import backend.Token;
import java.awt.Component;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;

/**
 *
 * @author michael
 */
public class EditorPanel extends javax.swing.JPanel {

    ArrayList<Token> listaToken = new ArrayList();
    NumeroLinea numerarEditor;
    NumeroLinea numerarConsola;

    /**
     * Creates new form EditorPanel
     */
    public EditorPanel() {
        initComponents();
        mostrarColumnaLabel.setText("Columna: 1");
        numerarEditor = new NumeroLinea(areaEditor);
        scrollEditor.setRowHeaderView(numerarEditor);
        numerarConsola = new NumeroLinea(areaConsola);
        scrollConsola.setRowHeaderView(numerarConsola);
        mostrarColumna();
    }

    public void setAreaEditor(String linea) {
        areaEditor.setText(linea);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelEditor = new javax.swing.JPanel();
        scrollEditor = new javax.swing.JScrollPane();
        areaEditor = new javax.swing.JTextArea();
        consolaPanel = new javax.swing.JPanel();
        scrollConsola = new javax.swing.JScrollPane();
        areaConsola = new javax.swing.JTextArea();
        ejecutarBoton = new javax.swing.JButton();
        limpiarBoton = new javax.swing.JButton();
        mostrarColumnaLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(204, 204, 204));
        setLayout(new java.awt.GridBagLayout());

        panelEditor.setPreferredSize(new java.awt.Dimension(887, 500));
        panelEditor.setLayout(new java.awt.BorderLayout());

        areaEditor.setColumns(20);
        areaEditor.setRows(5);
        scrollEditor.setViewportView(areaEditor);

        panelEditor.add(scrollEditor, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 887;
        gridBagConstraints.ipady = 348;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 6, 0, 3);
        add(panelEditor, gridBagConstraints);

        areaConsola.setEditable(false);
        areaConsola.setColumns(20);
        areaConsola.setRows(5);
        scrollConsola.setViewportView(areaConsola);

        javax.swing.GroupLayout consolaPanelLayout = new javax.swing.GroupLayout(consolaPanel);
        consolaPanel.setLayout(consolaPanelLayout);
        consolaPanelLayout.setHorizontalGroup(
            consolaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consolaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollConsola, javax.swing.GroupLayout.DEFAULT_SIZE, 875, Short.MAX_VALUE)
                .addContainerGap())
        );
        consolaPanelLayout.setVerticalGroup(
            consolaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(consolaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollConsola, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                .addContainerGap())
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 859;
        gridBagConstraints.ipady = 132;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 6, 6, 1);
        add(consolaPanel, gridBagConstraints);

        ejecutarBoton.setBackground(new java.awt.Color(0, 255, 0));
        ejecutarBoton.setFont(new java.awt.Font("MesloLGL Nerd Font", 3, 12)); // NOI18N
        ejecutarBoton.setForeground(new java.awt.Color(0, 0, 0));
        ejecutarBoton.setText("Ejecutar");
        ejecutarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ejecutarBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipady = 15;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 798, 0, 0);
        add(ejecutarBoton, gridBagConstraints);

        limpiarBoton.setBackground(new java.awt.Color(153, 153, 153));
        limpiarBoton.setFont(new java.awt.Font("MesloLGL Nerd Font", 0, 13)); // NOI18N
        limpiarBoton.setForeground(new java.awt.Color(0, 0, 0));
        limpiarBoton.setText("Limpiar Editor");
        limpiarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarBotonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 496, 0, 1);
        add(limpiarBoton, gridBagConstraints);

        mostrarColumnaLabel.setFont(new java.awt.Font("MesloLGL Nerd Font", 0, 13)); // NOI18N
        mostrarColumnaLabel.setForeground(new java.awt.Color(0, 0, 0));
        mostrarColumnaLabel.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        add(mostrarColumnaLabel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void ejecutarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ejecutarBotonActionPerformed
        if (areaEditor.getText().length() == 0) {
            JOptionPane.showMessageDialog(this, "No hay nada para analizar\nEscribe algo en el editor de código");
        } else {
            new Analizador(listaToken).analizar(areaEditor.getText());
            
            for (int i = 0; i < listaToken.size(); i++) {
                areaConsola.setText(areaConsola.getText() + "\n" + listaToken.get(i).toString());
                
            }
            //areaConsola.setText("No se ha implementado lógica\n\nPrueba funcionamiento consola");
        }
    }//GEN-LAST:event_ejecutarBotonActionPerformed

    private void limpiarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarBotonActionPerformed
        areaEditor.setText("");
        areaConsola.setText("");
    }//GEN-LAST:event_limpiarBotonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaConsola;
    private javax.swing.JTextArea areaEditor;
    private javax.swing.JPanel consolaPanel;
    private javax.swing.JButton ejecutarBoton;
    private javax.swing.JButton limpiarBoton;
    private javax.swing.JLabel mostrarColumnaLabel;
    private javax.swing.JPanel panelEditor;
    private javax.swing.JScrollPane scrollConsola;
    private javax.swing.JScrollPane scrollEditor;
    // End of variables declaration//GEN-END:variables

    public void pintarPanel(Component panel) {
        panelEditor.removeAll();
        panelEditor.add(panel);
        panelEditor.repaint();
        panelEditor.revalidate();
    }

    private void mostrarColumna() {
        areaEditor.addCaretListener(e -> {
            int caretPosition = areaEditor.getCaretPosition();
            int fila = 0;
            try {
                fila = areaEditor.getLineOfOffset(caretPosition);
            } catch (BadLocationException ex) {
                Logger.getLogger(EditorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

            int columna = 0;
            try {
                columna = caretPosition - areaEditor.getLineStartOffset(fila);
            } catch (BadLocationException ex) {
                Logger.getLogger(EditorPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            mostrarColumnaLabel.setText("Columna: " + (columna + 1));
        });
    }
}
